// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto

#ifndef PROTOBUF_msg_2eproto__INCLUDED
#define PROTOBUF_msg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace model {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_2eproto();
void protobuf_AssignDesc_msg_2eproto();
void protobuf_ShutdownFile_msg_2eproto();

class Msg;
class MsgData;
class IntItem;
class LongItem;
class FloatItem;
class DoubleItem;
class StringItem;
class MessageItem;

// ===================================================================

class Msg : public ::google::protobuf::Message {
 public:
  Msg();
  virtual ~Msg();

  Msg(const Msg& from);

  inline Msg& operator=(const Msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg& default_instance();

  void Swap(Msg* other);

  // implements Message ----------------------------------------------

  Msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg& from);
  void MergeFrom(const Msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 header = 1;
  inline bool has_header() const;
  inline void clear_header();
  static const int kHeaderFieldNumber = 1;
  inline ::google::protobuf::int32 header() const;
  inline void set_header(::google::protobuf::int32 value);

  // optional int32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // optional .model.proto.MsgData msgdata = 3;
  inline bool has_msgdata() const;
  inline void clear_msgdata();
  static const int kMsgdataFieldNumber = 3;
  inline const ::model::proto::MsgData& msgdata() const;
  inline ::model::proto::MsgData* mutable_msgdata();
  inline ::model::proto::MsgData* release_msgdata();
  inline void set_allocated_msgdata(::model::proto::MsgData* msgdata);

  // @@protoc_insertion_point(class_scope:model.proto.Msg)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_msgdata();
  inline void clear_has_msgdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 header_;
  ::google::protobuf::int32 version_;
  ::model::proto::MsgData* msgdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static Msg* default_instance_;
};
// -------------------------------------------------------------------

class MsgData : public ::google::protobuf::Message {
 public:
  MsgData();
  virtual ~MsgData();

  MsgData(const MsgData& from);

  inline MsgData& operator=(const MsgData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgData& default_instance();

  void Swap(MsgData* other);

  // implements Message ----------------------------------------------

  MsgData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgData& from);
  void MergeFrom(const MsgData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .model.proto.IntItem intItem = 1;
  inline int intitem_size() const;
  inline void clear_intitem();
  static const int kIntItemFieldNumber = 1;
  inline const ::model::proto::IntItem& intitem(int index) const;
  inline ::model::proto::IntItem* mutable_intitem(int index);
  inline ::model::proto::IntItem* add_intitem();
  inline const ::google::protobuf::RepeatedPtrField< ::model::proto::IntItem >&
      intitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::model::proto::IntItem >*
      mutable_intitem();

  // repeated .model.proto.LongItem longItem = 2;
  inline int longitem_size() const;
  inline void clear_longitem();
  static const int kLongItemFieldNumber = 2;
  inline const ::model::proto::LongItem& longitem(int index) const;
  inline ::model::proto::LongItem* mutable_longitem(int index);
  inline ::model::proto::LongItem* add_longitem();
  inline const ::google::protobuf::RepeatedPtrField< ::model::proto::LongItem >&
      longitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::model::proto::LongItem >*
      mutable_longitem();

  // repeated .model.proto.FloatItem floatItem = 3;
  inline int floatitem_size() const;
  inline void clear_floatitem();
  static const int kFloatItemFieldNumber = 3;
  inline const ::model::proto::FloatItem& floatitem(int index) const;
  inline ::model::proto::FloatItem* mutable_floatitem(int index);
  inline ::model::proto::FloatItem* add_floatitem();
  inline const ::google::protobuf::RepeatedPtrField< ::model::proto::FloatItem >&
      floatitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::model::proto::FloatItem >*
      mutable_floatitem();

  // repeated .model.proto.DoubleItem doubleItem = 4;
  inline int doubleitem_size() const;
  inline void clear_doubleitem();
  static const int kDoubleItemFieldNumber = 4;
  inline const ::model::proto::DoubleItem& doubleitem(int index) const;
  inline ::model::proto::DoubleItem* mutable_doubleitem(int index);
  inline ::model::proto::DoubleItem* add_doubleitem();
  inline const ::google::protobuf::RepeatedPtrField< ::model::proto::DoubleItem >&
      doubleitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::model::proto::DoubleItem >*
      mutable_doubleitem();

  // repeated .model.proto.StringItem stringItem = 5;
  inline int stringitem_size() const;
  inline void clear_stringitem();
  static const int kStringItemFieldNumber = 5;
  inline const ::model::proto::StringItem& stringitem(int index) const;
  inline ::model::proto::StringItem* mutable_stringitem(int index);
  inline ::model::proto::StringItem* add_stringitem();
  inline const ::google::protobuf::RepeatedPtrField< ::model::proto::StringItem >&
      stringitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::model::proto::StringItem >*
      mutable_stringitem();

  // repeated .model.proto.MessageItem messageItem = 6;
  inline int messageitem_size() const;
  inline void clear_messageitem();
  static const int kMessageItemFieldNumber = 6;
  inline const ::model::proto::MessageItem& messageitem(int index) const;
  inline ::model::proto::MessageItem* mutable_messageitem(int index);
  inline ::model::proto::MessageItem* add_messageitem();
  inline const ::google::protobuf::RepeatedPtrField< ::model::proto::MessageItem >&
      messageitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::model::proto::MessageItem >*
      mutable_messageitem();

  // @@protoc_insertion_point(class_scope:model.proto.MsgData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::model::proto::IntItem > intitem_;
  ::google::protobuf::RepeatedPtrField< ::model::proto::LongItem > longitem_;
  ::google::protobuf::RepeatedPtrField< ::model::proto::FloatItem > floatitem_;
  ::google::protobuf::RepeatedPtrField< ::model::proto::DoubleItem > doubleitem_;
  ::google::protobuf::RepeatedPtrField< ::model::proto::StringItem > stringitem_;
  ::google::protobuf::RepeatedPtrField< ::model::proto::MessageItem > messageitem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MsgData* default_instance_;
};
// -------------------------------------------------------------------

class IntItem : public ::google::protobuf::Message {
 public:
  IntItem();
  virtual ~IntItem();

  IntItem(const IntItem& from);

  inline IntItem& operator=(const IntItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntItem& default_instance();

  void Swap(IntItem* other);

  // implements Message ----------------------------------------------

  IntItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntItem& from);
  void MergeFrom(const IntItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:model.proto.IntItem)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  ::google::protobuf::int32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static IntItem* default_instance_;
};
// -------------------------------------------------------------------

class LongItem : public ::google::protobuf::Message {
 public:
  LongItem();
  virtual ~LongItem();

  LongItem(const LongItem& from);

  inline LongItem& operator=(const LongItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LongItem& default_instance();

  void Swap(LongItem* other);

  // implements Message ----------------------------------------------

  LongItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LongItem& from);
  void MergeFrom(const LongItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional int64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int64 value() const;
  inline void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:model.proto.LongItem)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  ::google::protobuf::int64 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static LongItem* default_instance_;
};
// -------------------------------------------------------------------

class FloatItem : public ::google::protobuf::Message {
 public:
  FloatItem();
  virtual ~FloatItem();

  FloatItem(const FloatItem& from);

  inline FloatItem& operator=(const FloatItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatItem& default_instance();

  void Swap(FloatItem* other);

  // implements Message ----------------------------------------------

  FloatItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FloatItem& from);
  void MergeFrom(const FloatItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional float value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline float value() const;
  inline void set_value(float value);

  // @@protoc_insertion_point(class_scope:model.proto.FloatItem)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  float value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static FloatItem* default_instance_;
};
// -------------------------------------------------------------------

class DoubleItem : public ::google::protobuf::Message {
 public:
  DoubleItem();
  virtual ~DoubleItem();

  DoubleItem(const DoubleItem& from);

  inline DoubleItem& operator=(const DoubleItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleItem& default_instance();

  void Swap(DoubleItem* other);

  // implements Message ----------------------------------------------

  DoubleItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoubleItem& from);
  void MergeFrom(const DoubleItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional double value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline double value() const;
  inline void set_value(double value);

  // @@protoc_insertion_point(class_scope:model.proto.DoubleItem)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  double value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static DoubleItem* default_instance_;
};
// -------------------------------------------------------------------

class StringItem : public ::google::protobuf::Message {
 public:
  StringItem();
  virtual ~StringItem();

  StringItem(const StringItem& from);

  inline StringItem& operator=(const StringItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringItem& default_instance();

  void Swap(StringItem* other);

  // implements Message ----------------------------------------------

  StringItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringItem& from);
  void MergeFrom(const StringItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:model.proto.StringItem)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  ::std::string* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static StringItem* default_instance_;
};
// -------------------------------------------------------------------

class MessageItem : public ::google::protobuf::Message {
 public:
  MessageItem();
  virtual ~MessageItem();

  MessageItem(const MessageItem& from);

  inline MessageItem& operator=(const MessageItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageItem& default_instance();

  void Swap(MessageItem* other);

  // implements Message ----------------------------------------------

  MessageItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageItem& from);
  void MergeFrom(const MessageItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional .model.proto.MsgData msgdata = 2;
  inline bool has_msgdata() const;
  inline void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  inline const ::model::proto::MsgData& msgdata() const;
  inline ::model::proto::MsgData* mutable_msgdata();
  inline ::model::proto::MsgData* release_msgdata();
  inline void set_allocated_msgdata(::model::proto::MsgData* msgdata);

  // @@protoc_insertion_point(class_scope:model.proto.MessageItem)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_msgdata();
  inline void clear_has_msgdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  ::model::proto::MsgData* msgdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_msg_2eproto();
  friend void protobuf_AssignDesc_msg_2eproto();
  friend void protobuf_ShutdownFile_msg_2eproto();

  void InitAsDefaultInstance();
  static MessageItem* default_instance_;
};
// ===================================================================


// ===================================================================

// Msg

// optional int32 header = 1;
inline bool Msg::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg::clear_header() {
  header_ = 0;
  clear_has_header();
}
inline ::google::protobuf::int32 Msg::header() const {
  return header_;
}
inline void Msg::set_header(::google::protobuf::int32 value) {
  set_has_header();
  header_ = value;
}

// optional int32 version = 2;
inline bool Msg::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 Msg::version() const {
  return version_;
}
inline void Msg::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
}

// optional .model.proto.MsgData msgdata = 3;
inline bool Msg::has_msgdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg::set_has_msgdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg::clear_has_msgdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg::clear_msgdata() {
  if (msgdata_ != NULL) msgdata_->::model::proto::MsgData::Clear();
  clear_has_msgdata();
}
inline const ::model::proto::MsgData& Msg::msgdata() const {
  return msgdata_ != NULL ? *msgdata_ : *default_instance_->msgdata_;
}
inline ::model::proto::MsgData* Msg::mutable_msgdata() {
  set_has_msgdata();
  if (msgdata_ == NULL) msgdata_ = new ::model::proto::MsgData;
  return msgdata_;
}
inline ::model::proto::MsgData* Msg::release_msgdata() {
  clear_has_msgdata();
  ::model::proto::MsgData* temp = msgdata_;
  msgdata_ = NULL;
  return temp;
}
inline void Msg::set_allocated_msgdata(::model::proto::MsgData* msgdata) {
  delete msgdata_;
  msgdata_ = msgdata;
  if (msgdata) {
    set_has_msgdata();
  } else {
    clear_has_msgdata();
  }
}

// -------------------------------------------------------------------

// MsgData

// repeated .model.proto.IntItem intItem = 1;
inline int MsgData::intitem_size() const {
  return intitem_.size();
}
inline void MsgData::clear_intitem() {
  intitem_.Clear();
}
inline const ::model::proto::IntItem& MsgData::intitem(int index) const {
  return intitem_.Get(index);
}
inline ::model::proto::IntItem* MsgData::mutable_intitem(int index) {
  return intitem_.Mutable(index);
}
inline ::model::proto::IntItem* MsgData::add_intitem() {
  return intitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::model::proto::IntItem >&
MsgData::intitem() const {
  return intitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::model::proto::IntItem >*
MsgData::mutable_intitem() {
  return &intitem_;
}

// repeated .model.proto.LongItem longItem = 2;
inline int MsgData::longitem_size() const {
  return longitem_.size();
}
inline void MsgData::clear_longitem() {
  longitem_.Clear();
}
inline const ::model::proto::LongItem& MsgData::longitem(int index) const {
  return longitem_.Get(index);
}
inline ::model::proto::LongItem* MsgData::mutable_longitem(int index) {
  return longitem_.Mutable(index);
}
inline ::model::proto::LongItem* MsgData::add_longitem() {
  return longitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::model::proto::LongItem >&
MsgData::longitem() const {
  return longitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::model::proto::LongItem >*
MsgData::mutable_longitem() {
  return &longitem_;
}

// repeated .model.proto.FloatItem floatItem = 3;
inline int MsgData::floatitem_size() const {
  return floatitem_.size();
}
inline void MsgData::clear_floatitem() {
  floatitem_.Clear();
}
inline const ::model::proto::FloatItem& MsgData::floatitem(int index) const {
  return floatitem_.Get(index);
}
inline ::model::proto::FloatItem* MsgData::mutable_floatitem(int index) {
  return floatitem_.Mutable(index);
}
inline ::model::proto::FloatItem* MsgData::add_floatitem() {
  return floatitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::model::proto::FloatItem >&
MsgData::floatitem() const {
  return floatitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::model::proto::FloatItem >*
MsgData::mutable_floatitem() {
  return &floatitem_;
}

// repeated .model.proto.DoubleItem doubleItem = 4;
inline int MsgData::doubleitem_size() const {
  return doubleitem_.size();
}
inline void MsgData::clear_doubleitem() {
  doubleitem_.Clear();
}
inline const ::model::proto::DoubleItem& MsgData::doubleitem(int index) const {
  return doubleitem_.Get(index);
}
inline ::model::proto::DoubleItem* MsgData::mutable_doubleitem(int index) {
  return doubleitem_.Mutable(index);
}
inline ::model::proto::DoubleItem* MsgData::add_doubleitem() {
  return doubleitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::model::proto::DoubleItem >&
MsgData::doubleitem() const {
  return doubleitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::model::proto::DoubleItem >*
MsgData::mutable_doubleitem() {
  return &doubleitem_;
}

// repeated .model.proto.StringItem stringItem = 5;
inline int MsgData::stringitem_size() const {
  return stringitem_.size();
}
inline void MsgData::clear_stringitem() {
  stringitem_.Clear();
}
inline const ::model::proto::StringItem& MsgData::stringitem(int index) const {
  return stringitem_.Get(index);
}
inline ::model::proto::StringItem* MsgData::mutable_stringitem(int index) {
  return stringitem_.Mutable(index);
}
inline ::model::proto::StringItem* MsgData::add_stringitem() {
  return stringitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::model::proto::StringItem >&
MsgData::stringitem() const {
  return stringitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::model::proto::StringItem >*
MsgData::mutable_stringitem() {
  return &stringitem_;
}

// repeated .model.proto.MessageItem messageItem = 6;
inline int MsgData::messageitem_size() const {
  return messageitem_.size();
}
inline void MsgData::clear_messageitem() {
  messageitem_.Clear();
}
inline const ::model::proto::MessageItem& MsgData::messageitem(int index) const {
  return messageitem_.Get(index);
}
inline ::model::proto::MessageItem* MsgData::mutable_messageitem(int index) {
  return messageitem_.Mutable(index);
}
inline ::model::proto::MessageItem* MsgData::add_messageitem() {
  return messageitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::model::proto::MessageItem >&
MsgData::messageitem() const {
  return messageitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::model::proto::MessageItem >*
MsgData::mutable_messageitem() {
  return &messageitem_;
}

// -------------------------------------------------------------------

// IntItem

// optional string key = 1;
inline bool IntItem::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntItem::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntItem::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& IntItem::key() const {
  return *key_;
}
inline void IntItem::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void IntItem::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void IntItem::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* IntItem::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* IntItem::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void IntItem::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 value = 2;
inline bool IntItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntItem::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 IntItem::value() const {
  return value_;
}
inline void IntItem::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// LongItem

// optional string key = 1;
inline bool LongItem::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LongItem::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LongItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LongItem::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& LongItem::key() const {
  return *key_;
}
inline void LongItem::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void LongItem::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void LongItem::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LongItem::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* LongItem::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LongItem::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 value = 2;
inline bool LongItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LongItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LongItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LongItem::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 LongItem::value() const {
  return value_;
}
inline void LongItem::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// FloatItem

// optional string key = 1;
inline bool FloatItem::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FloatItem::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FloatItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FloatItem::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& FloatItem::key() const {
  return *key_;
}
inline void FloatItem::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void FloatItem::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void FloatItem::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FloatItem::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* FloatItem::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FloatItem::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional float value = 2;
inline bool FloatItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FloatItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FloatItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FloatItem::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline float FloatItem::value() const {
  return value_;
}
inline void FloatItem::set_value(float value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// DoubleItem

// optional string key = 1;
inline bool DoubleItem::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DoubleItem::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DoubleItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DoubleItem::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& DoubleItem::key() const {
  return *key_;
}
inline void DoubleItem::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void DoubleItem::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void DoubleItem::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DoubleItem::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* DoubleItem::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DoubleItem::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional double value = 2;
inline bool DoubleItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DoubleItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DoubleItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DoubleItem::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double DoubleItem::value() const {
  return value_;
}
inline void DoubleItem::set_value(double value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// StringItem

// optional string key = 1;
inline bool StringItem::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringItem::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StringItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StringItem::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& StringItem::key() const {
  return *key_;
}
inline void StringItem::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void StringItem::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void StringItem::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StringItem::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* StringItem::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StringItem::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string value = 2;
inline bool StringItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StringItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StringItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StringItem::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& StringItem::value() const {
  return *value_;
}
inline void StringItem::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void StringItem::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void StringItem::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StringItem::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* StringItem::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StringItem::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MessageItem

// optional string key = 1;
inline bool MessageItem::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageItem::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageItem::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& MessageItem::key() const {
  return *key_;
}
inline void MessageItem::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void MessageItem::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void MessageItem::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MessageItem::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* MessageItem::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MessageItem::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .model.proto.MsgData msgdata = 2;
inline bool MessageItem::has_msgdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageItem::set_has_msgdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageItem::clear_has_msgdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageItem::clear_msgdata() {
  if (msgdata_ != NULL) msgdata_->::model::proto::MsgData::Clear();
  clear_has_msgdata();
}
inline const ::model::proto::MsgData& MessageItem::msgdata() const {
  return msgdata_ != NULL ? *msgdata_ : *default_instance_->msgdata_;
}
inline ::model::proto::MsgData* MessageItem::mutable_msgdata() {
  set_has_msgdata();
  if (msgdata_ == NULL) msgdata_ = new ::model::proto::MsgData;
  return msgdata_;
}
inline ::model::proto::MsgData* MessageItem::release_msgdata() {
  clear_has_msgdata();
  ::model::proto::MsgData* temp = msgdata_;
  msgdata_ = NULL;
  return temp;
}
inline void MessageItem::set_allocated_msgdata(::model::proto::MsgData* msgdata) {
  delete msgdata_;
  msgdata_ = msgdata;
  if (msgdata) {
    set_has_msgdata();
  } else {
    clear_has_msgdata();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace model

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_2eproto__INCLUDED
